<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
    <property name="tabWidth" value="4"/>
    <module name="FileContentsHolder"/>
    <module name="SuppressWarningsHolder"/>
    <module name="JavadocType">
      <property name="scope" value="protected"/>
      <property name="tokens" value="INTERFACE_DEF"/>
    </module>
    <module name="JavadocStyle">
      <property name="checkFirstSentence" value="false"/>
    </module>
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="LocalVariableName"/>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>
    <module name="AvoidStarImport"/>
    <module name="IllegalImport">
      <property name="illegalPkgs" value="sun,org.apache.log4j"/>
    </module>
    <module name="RedundantImport"/>
    <module name="UnusedImports">
      <property name="processJavadoc" value="true"/>
    </module>
    <module name="LineLength">
      <property name="max" value="140"/>
      <property name="tabWidth" value="4"/>
    </module>
    <module name="MethodLength"/>
    <module name="ParameterNumber"/>
    <module name="EmptyForIteratorPad">
      <property name="option" value="space"/>
    </module>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="LeftCurly">
      <property name="maxLineLength" value="120"/>
    </module>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="tokens" value="LITERAL_CATCH,LITERAL_FINALLY,LITERAL_ELSE"/>
    </module>
    <module name="EmptyStatement"/>
    <module name="EqualsHashCode"/>
    <module name="HiddenField">
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>
    </module>
    <module name="IllegalInstantiation"/>
    <module name="InnerAssignment"/>
    <module name="MagicNumber">
      <property name="ignoreHashCodeMethod" value="true"/>
      <property name="ignoreAnnotation" value="true"/>
    </module>
    <module name="MissingSwitchDefault"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="VisibilityModifier"/>
    <module name="ArrayTypeStyle"/>
    <module name="TodoComment">
      <property name="severity" value="info"/>
    </module>
    <module name="UpperEll"/>
    <module name="ConstantName"/>
    <module name="LocalFinalVariableName"/>
    <module name="EqualsAvoidNull"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="IllegalCatch"/>
    <module name="IllegalThrows"/>
    <module name="NoFinalizer"/>
    <module name="ParameterAssignment"/>
    <module name="Indentation">
      <property name="arrayInitIndent" value="8"/>
      <property name="lineWrappingIndentation" value="8"/>
    </module>
    <module name="BooleanExpressionComplexity"/>
    <module name="ClassDataAbstractionCoupling"/>
    <module name="ClassFanOutComplexity"/>
    <module name="CyclomaticComplexity"/>
    <module name="NPathComplexity"/>
    <module name="UnnecessaryParentheses"/>
    <module name="ImportOrder">
      <property name="option" value="top"/>
      <property name="groups" value="/^java\./,/^javax\./,/^org\./,/^com\./"/>
      <property name="separated" value="true"/>
    </module>
    <module name="StringLiteralEquality"/>
    <module name="OneStatementPerLine"/>
    <module name="DeclarationOrder">
      <property name="ignoreModifiers" value="true"/>
    </module>
    <module name="DefaultComesLast"/>
    <module name="UncommentedMain"/>
    <module name="JavaNCSS"/>
    <module name="EmptyLineSeparator">
      <property name="tokens" value="IMPORT,CLASS_DEF,ENUM_DEF,INTERFACE_DEF,CTOR_DEF,METHOD_DEF,STATIC_INIT,INSTANCE_INIT,VARIABLE_DEF"/>
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
    </module>
    <module name="SeparatorWrap">
      <property name="option" value="nl"/>
      <property name="tokens" value="DOT"/>
    </module>
    <module name="SeparatorWrap">
      <property name="tokens" value="COMMA,SEMI"/>
    </module>
    <module name="RegexpSinglelineJava">
      <metadata name="net.sf.eclipsecs.core.comment" value="javax.transaction.Transactional illegal import (only the class, not the whole javax.transaction package)"/>
      <property name="format" value="^(.*)import javax.transaction.Transactional(.*)$"/>
      <property name="message" value="Illegal import (javax.transaction.Transactional). Use Spring version instead."/>
    </module>
    <module name="RegexpSinglelineJava">
      <metadata name="net.sf.eclipsecs.core.comment" value="org.springframework.beans.factory.annotation.Qualifier illegal import (only the class, not the whole org.springframework.beans.factory.annotation package)"/>
      <property name="format" value="^(.*)import org.springframework.beans.factory.annotation.Qualifier(.*)$"/>
      <property name="message" value="Illegal import (org.springframework.beans.factory.annotation.Qualifier). Use @java.inject.Named or @javax.inject.Qualifier instead according to the context instead."/>
    </module>
    <module name="RegexpSinglelineJava">
      <metadata name="net.sf.eclipsecs.core.comment" value="org.springframework.beans.factory.annotation.Autowired illegal import (only the class, not the whole org.springframework.beans.factory.annotation package)"/>
      <property name="format" value="^(.*)import org.springframework.beans.factory.annotation.Autowired(.*)$"/>
      <property name="message" value="Illegal import (org.springframework.beans.factory.annotation.Autowired). Use @Inject instead."/>
    </module>
    <module name="RegexpSinglelineJava">
      <metadata name="net.sf.eclipsecs.core.comment" value="Validates @Ignore have a reason"/>
      <property name="format" value="^(.*)@Ignore(?!\(&quot;).*$"/>
      <property name="message" value="@Ignore should have a reason: @Ignore(&quot;Reason&quot;)"/>
    </module>
    <module name="MissingOverride"/>
    <module name="RegexpSinglelineJava">
      <metadata name="net.sf.eclipsecs.core.comment" value="Prevent System.out/err usage"/>
      <property name="id" value="systemout"/>
      <property name="format" value="^.*System\.(out|err).*$"/>
      <property name="message" value="Don't use System.out/err, use SLF4J instead."/>
    </module>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAND,LCURLY,LE,LITERAL_ASSERT,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,TYPE_EXTENSION_AND"/>
    </module>
    <module name="ModifiedControlVariable"/>
  </module>
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf"/>
    <property name="fileExtensions" value="java"/>
  </module>
  <module name="Translation"/>
  <module name="FileLength"/>
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>
  <module name="SuppressionCommentFilter">
    <property name="offCommentFormat" value="@cs-\: ([\w\|]+)"/>
    <property name="onCommentFormat" value="@cs\+\: ([\w\|]+)"/>
    <property name="checkFormat" value="$1"/>
  </module>
  <module name="SuppressWarningsFilter"/>
  <!-- 
  <module name="SuppressionFilter">
    <property name="file" value="${checkstyle.suppressions.filter.path}"/>
  </module>
   -->
  <module name="RegexpHeader">
    <property name="charset" value="UTF-8"/>
    <property name="header" value="\/*$\n^ \* This file is copyrighted \d\d\d\d-\d\d\d\d$\n^ \*$\n^ \* company A/S\. All rights reserved\.$\n^ \* http://www\.company\.dk$\n^ \*$\n^ \* Redistribution and use in source and binary forms, with or without modification,$\n^ \* is not permitted absent prior written approval from company A/S\.$\n^ \*/$\n"/>
  </module>
  <module name="SuppressionCommentFilter">
    <metadata name="net.sf.eclipsecs.core.comment" value="Suppress all violations"/>
    <property name="offCommentFormat" value="@cs-\: All"/>
    <property name="onCommentFormat" value="@cs+\: All"/>
  </module>
</module>